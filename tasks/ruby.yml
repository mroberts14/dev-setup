---
# A lot of this is taken from this role https://github.com/zzet/rbenv
# Maybe just call the role instead?

- name: set tmp directory path 
  set_fact:
    rbenv_tmpdir: "{{ ansible_env.TMPDIR | default('/tmp') }}"
  when: rbenv_tmpdir is undefined

#TODO: make this a handler or repeatable?
- name: update apt cache
  apt:
    update_cache: yes
  become: true

- name: install required packages and libraries for ruby
  apt:
    pkg: "{{ rbenv_apt_packages }}"
    state: present
  become: true

- name: checkout rbenv_repo for user
  git:
    repo: "{{ rbenv_repo }}"
    dest: "{{ rbenv_root }}"
    accept_hostkey: yes
    force: yes
  become: true
  become_user: "{{ user }}"

- name: create plugins directory for selected users
  file:
    state: directory
    path: "{{ rbenv_root }}/plugins"
  become: true 
  become_user: "{{ user }}"

# Currently installs only ruby-build
#TODO: investigate other plugins if needed?
- name: install plugins for user
  git:
    repo: "{{ item.repo }}"
    dest: "{{ rbenv_root }}/plugins/{{ item.name }}"
    version: "{{ item.version }}"
    accept_hostkey: yes
    force: yes
  loop: "{{ rbenv_plugins }}"
    # with_nested: 
    # - "{{ rbenv_users }}"
    # - "{{ rbenv_plugins }}"
  become: true
  become_user: "{{ user }}"


- name: add rbenv initialization to profile system-wide
  template:
    src: rbenv_user.sh.j2
    dest: /etc/profile.d/rbenv.sh
    owner: root
    group: root
  become: true

- name: add rbenv initilization to profile system-wide
  blockinfile:
    block: "{{ lookup('template', 'rbenv_user.sh.j2') }}"
    dest: /etc/profile
  become: true

- name: check ruby versions installed for user
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv versions --bare"
  become: true
  register: rbenv_versions
  become_user: "{{ user }}"
  changed_when: false
  failed_when: false
  check_mode: no


- name: install specified ruby versions for user
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv install --skip-existing {{ item[0].version }}"
  become: true
  args:
    creates: "~/.rbenv/version/{{ item[0].version }}"
  become_user: "{{ user }}"
  loop:
    - "{{ rbenv.rubies }}"
  environment: 
    TMPDIR: "{{ rbenv_tmpdir  }}"

- name: check if user ruby version is {{ rbenv.default_ruby }}
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv version | cut -d ' ' -f 1 | grep -Fx '{{ rbenv.default_ruby }}'"
  become: true
  become_user: "{{ user }}"
  register: ruby_selected
  changed_when: false
  failed_when: false
  check_mode: no


- name: set ruby {{ rbenv.default_ruby }} for user
  shell: $0 -lc "{{ rbenv_root}}/bin/rbenv global {{ rbenv.default_ruby }} && {{ rbenv_root }}/bin/rbenv rehash"
  become: true
  become_user: "{{ user }}"
