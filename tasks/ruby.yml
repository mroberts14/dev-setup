---
# A lot of this is taken from this role https://github.com/zzet/rbenv
# Maybe just call the role instead?

- name: Set tmp directory path
  set_fact:
    rbenv_tmpdir: "{{ ansible_env.TMPDIR | default('/tmp') }}"
  when: rbenv_tmpdir is undefined

# TODO: make this a handler or repeatable?
- name: Update apt cache
  apt:
    update_cache: true
    cache_valid_time: 86400
  become: true

- name: Install required packages and libraries for ruby
  apt:
    pkg: "{{ rbenv_apt_packages }}"
    state: present
  become: true

- name: Checkout rbenv_repo for user
  git:
    repo: "{{ rbenv_repo }}"
    dest: "{{ rbenv_root }}"
    accept_hostkey: true
    force: true
    update: true
  become: true
  become_user: "{{ user }}"

- name: Create plugins directory for selected users
  file:
    state: directory
    path: "{{ rbenv_root }}/plugins"
  become: true
  become_user: "{{ user }}"

# Currently installs only ruby-build
# TODO: investigate other plugins if needed?
- name: Install plugins for user
  git:
    repo: "{{ item.repo }}"
    dest: "{{ rbenv_root }}/plugins/{{ item.name }}"
    version: "{{ item.version }}"
    accept_hostkey: true
    force: true
  loop: "{{ rbenv_plugins }}"
  become: true
  become_user: "{{ user }}"

- name: Add rbenv initialization to profile system-wide
  template:
    src: rbenv_user.sh.j2
    dest: /etc/profile.d/rbenv.sh
    owner: root
    group: root
  become: true

- name: Add rbenv initilization to profile system-wide
  blockinfile:
    block: "{{ lookup('template', 'rbenv_user.sh.j2') }}"
    dest: /etc/profile
  become: true

- name: Check ruby versions installed for user
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv versions --bare"
  become: true
  register: rbenv_versions
  become_user: "{{ user }}"
  changed_when: false
  failed_when: false
  check_mode: false


- name: Install specified ruby versions for user
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv install --skip-existing {{ item[0].version }}"
  become: true
  args:
    creates: "~/.rbenv/version/{{ item[0].version }}"
  become_user: "{{ user }}"
  loop:
    - "{{ rbenv.rubies }}"
  environment:
    TMPDIR: "{{ rbenv_tmpdir }}"

- name: Check if user ruby version is {{ rbenv.default_ruby }}
  shell: |
    set -o pipefail && $0 -lc "{{ rbenv_root }}/bin/rbenv version | cut -d ' ' -f 1 | grep -Fx '{{ rbenv.default_ruby }}'"
  become: true
  become_user: "{{ user }}"
  register: ruby_selected
  changed_when: false
  failed_when: false
  check_mode: false

- name: check rbenv global for version
  shell: "{{ rbenv_root }}/bin/rbenv global"
  register: rbenv_global
  become: true
  become_user: "{{ user }}"

- name: Set ruby for user to be {{ rbenv.default_ruby }}
  shell: $0 -lc "{{ rbenv_root }}/bin/rbenv global {{ rbenv.default_ruby }} && {{ rbenv_root }}/bin/rbenv rehash"
  become: true
  become_user: "{{ user }}"
  when: rbenv_global.stdout != rbenv.default_ruby
